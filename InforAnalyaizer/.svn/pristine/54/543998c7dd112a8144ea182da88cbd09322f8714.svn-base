<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ichangyun.InforAnalyaizer.mapper.collection.CollectionTypeMapper" >
  <resultMap id="BaseResultMap" type="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeVo" >
    <id column="User_ID" property="userId" jdbcType="CHAR" />
    <id column="CollectionType_ID" property="collectiontypeId" jdbcType="CHAR" />
    <result column="CollectionTypeName" property="collectiontypename" jdbcType="VARCHAR" />
    <result column="Parent_CollectionType_ID" property="parentCollectiontypeId" jdbcType="CHAR" />
    <result column="DisplayOrder" property="displayorder" jdbcType="INTEGER" />
    <result column="ValidFlag" property="validflag" jdbcType="CHAR" />
    <result column="CreateUser" property="createuser" jdbcType="VARCHAR" />
    <result column="CreateDateTime" property="createdatetime" jdbcType="TIMESTAMP" />
    <result column="UpdateUser" property="updateuser" jdbcType="VARCHAR" />
    <result column="UpdateDateTime" property="updatedatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    User_ID, CollectionType_ID, CollectionTypeName, Parent_CollectionType_ID, DisplayOrder, 
    ValidFlag, CreateUser, CreateDateTime, UpdateUser, UpdateDateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeKey" >
    select 
    <include refid="Base_Column_List" />
    from m_collectiontype
    where User_ID = #{userId,jdbcType=CHAR}
      and CollectionType_ID = #{collectiontypeId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeKey" >
      delete from m_collectiontype where User_ID = #{userId} and locate(
   		CollectionType_ID,
  		(select DISTINCT getChildList_collectiontype(#{collectiontypeId}) from m_collectiontype)
		)>0 
  </delete>

  <insert id="insertSelective" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    insert into m_collectiontype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        User_ID,
      </if>
      <if test="collectiontypeId != null" >
        CollectionType_ID,
      </if>
      <if test="collectiontypename != null" >
        CollectionTypeName,
      </if>
      <if test="parentCollectiontypeId != null" >
        Parent_CollectionType_ID,
      </if>
      <if test="displayorder != null" >
        DisplayOrder,
      </if>
      <if test="validflag != null" >
        ValidFlag,
      </if>
      <if test="createuser != null" >
        CreateUser,
      </if>
      <if test="createdatetime != null" >
        CreateDateTime,
      </if>
      <if test="updateuser != null" >
        UpdateUser,
      </if>
      <if test="updatedatetime != null" >
        UpdateDateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="collectiontypeId != null" >
        #{collectiontypeId,jdbcType=CHAR},
      </if>
      <if test="collectiontypename != null" >
        #{collectiontypename,jdbcType=VARCHAR},
      </if>
      <if test="parentCollectiontypeId != null" >
        #{parentCollectiontypeId,jdbcType=CHAR},
      </if>
      <if test="displayorder != null" >
        #{displayorder,jdbcType=INTEGER},
      </if>
      <if test="validflag != null" >
        #{validflag,jdbcType=CHAR},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdatetime != null" >
        #{createdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatedatetime != null" >
        #{updatedatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    update m_collectiontype
    <set >
      <if test="collectiontypename != null" >
        CollectionTypeName = #{collectiontypename,jdbcType=VARCHAR},
      </if>
      <if test="parentCollectiontypeId != null" >
        Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR},
      </if>
      <if test="displayorder != null" >
        DisplayOrder = #{displayorder,jdbcType=INTEGER},
      </if>
      <if test="validflag != null" >
        ValidFlag = #{validflag,jdbcType=CHAR},
      </if>
      <if test="createuser != null" >
        CreateUser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createdatetime != null" >
        CreateDateTime = #{createdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        UpdateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatedatetime != null" >
        UpdateDateTime = #{updatedatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where User_ID = #{userId,jdbcType=CHAR}
      and CollectionType_ID = #{collectiontypeId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    update m_collectiontype
    set CollectionTypeName = #{collectiontypename,jdbcType=VARCHAR},
      Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR},
      DisplayOrder = #{displayorder,jdbcType=INTEGER},
      ValidFlag = #{validflag,jdbcType=CHAR},
      CreateUser = #{createuser,jdbcType=VARCHAR},
      CreateDateTime = #{createdatetime,jdbcType=TIMESTAMP},
      UpdateUser = #{updateuser,jdbcType=VARCHAR},
      UpdateDateTime = #{updatedatetime,jdbcType=TIMESTAMP}
    where User_ID = #{userId,jdbcType=CHAR}
      and CollectionType_ID = #{collectiontypeId,jdbcType=CHAR}
  </update>
    <select id="queryAllType" resultMap="BaseResultMap" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from m_collectiontype
    where User_ID = #{value}
    ORDER BY DisplayOrder

  </select>
  
   <select id="queryCount" resultType="integer" parameterType="String" >
    select 
    count(1)
    from m_collectiontype
    where Parent_CollectionType_ID=#{value}

  </select>
</mapper>