package com.ichangyun.InforAnalyaizer.service.classification.impl;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.support.DefaultTransactionDefinition;

import com.alibaba.fastjson.JSONArray;
import com.ichangyun.InforAnalyaizer.mapper.classification.ClassificationInfoMapper;
import com.ichangyun.InforAnalyaizer.mapper.numbercontrol.NumberControlMapper;
import com.ichangyun.InforAnalyaizer.model.classification.ClassificationInfoBean;
import com.ichangyun.InforAnalyaizer.model.numbercontroll.NumberingcontrolBean;
import com.ichangyun.InforAnalyaizer.service.classification.ClassificationInfoService;

@Service
public class ClassificationInfoServiceImpl implements ClassificationInfoService {

	
	@Autowired
	private ClassificationInfoMapper classificationInfoMapper;

	@Autowired
	private NumberControlMapper numberControlMapper;
	
	@Resource(name = "transactionManager")
    private PlatformTransactionManager platformTransactionManager;
	
	@Override
	public int getClassifcInfoCount(ClassificationInfoBean cb) {
		
		return classificationInfoMapper.getClassifcInfoCount(cb);
	}

	@Override
	public String getClassifcInfo(ClassificationInfoBean cb) {
		
		cb.setL_pre((cb.getPageNow()-1)*cb.getRowSize());
		
		List<ClassificationInfoBean> list = classificationInfoMapper.getClassifcInfo(cb);
		
		JSONArray listArray=(JSONArray) JSONArray.toJSON(list);
		
		return listArray.toJSONString();
	}

	@Override
	public String getClassificationInfoID() {
		
		 //关闭事务自动提交
        DefaultTransactionDefinition def = new DefaultTransactionDefinition();
        def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW);
        TransactionStatus status = platformTransactionManager.getTransaction(def);
		
        NumberingcontrolBean nb = new NumberingcontrolBean();
        nb.setControlID("NC00000004");
        NumberingcontrolBean id_nb =  numberControlMapper.getInfoByID(nb);
        
        String first_char = id_nb.getFirstCharacter();
        int ws = id_nb.getNumberOfDigits();
        int presetval = id_nb.getPresentValue()+1;
        
        int p_lg = String.valueOf(presetval).length();
        
        StringBuilder sb = new StringBuilder(first_char); 
        for(int i=0;i<ws-1-p_lg;i++) {
        	sb.append("0");
        }
        sb.append(presetval);
        
        nb.setPresentValue(presetval);
        numberControlMapper.updatePresetVal(nb);
        
        platformTransactionManager.commit(status);  //提交事务
        
		return sb.toString();
	}

	@Override
	public boolean AddNew(ClassificationInfoBean cb) {
       try {
			 //关闭事务自动提交
	       DefaultTransactionDefinition def = new DefaultTransactionDefinition();
	       def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW);
	       TransactionStatus status = platformTransactionManager.getTransaction(def);
	       
	       int display_order = classificationInfoMapper.getDisplayOrder(cb);
	       
	       cb.setDisplayOrder(display_order);
	       
	       int res = classificationInfoMapper.addNew(cb);
	       
	       platformTransactionManager.commit(status);  //提交事务
	       
	       if(res==1) {
	    	   return true;
	       }
       
	       return false;
       }catch(Exception e) {
    	   e.printStackTrace();
    	   return false;
       }
	}

	@Override
	public boolean exist(ClassificationInfoBean cb) {
	    
		int count = classificationInfoMapper.exist(cb);
		
		if(count>=1) {
			return true;
		}
		
		return false;
	}
	
	@Override
	public boolean existExceptID(ClassificationInfoBean cb) {
		int count = classificationInfoMapper.existExceptID(cb);
		if(count>=1) {
			return true;
		}
		
		return false;
	}

	@Override
	public boolean updateData(ClassificationInfoBean cb) {
		
		int count = classificationInfoMapper.updateData(cb);
		
		if(count==1) {
			return true;
		}
		
		return false;
	}
	
}
