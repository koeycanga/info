<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.ichangyun.InforAnalyaizer.mapper.classificationfilterwords.ClassificationFilterwordsMapper">
	<resultMap id="BaseResultMap"
		type="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.ClassificationFilterwords">
		<id column="Classification_ID" property="classificationId"
			jdbcType="CHAR" />
		<result column="InformationTropism"
			property="informationtropism" jdbcType="CHAR" />
		<result column="CreateUser" property="createuser"
			jdbcType="VARCHAR" />
		<result column="CreateDateTime" property="createdatetime"
			jdbcType="TIMESTAMP" />
		<result column="UpdateUser" property="updateuser"
			jdbcType="VARCHAR" />
		<result column="UpdateDateTime" property="updatedatetime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.ClassificationFilterwordsWithBLOBs"
		extends="BaseResultMap">
		<result column="AllCorePhrases" property="allcorephrases"
			jdbcType="LONGVARCHAR" />
		<result column="AllExcludePhrases" property="allexcludephrases"
			jdbcType="LONGVARCHAR" />
		<result column="TitleCorePhrases" property="titlecorephrases"
			jdbcType="LONGVARCHAR" />
		<result column="TitleExcludePhrases"
			property="titleexcludephrases" jdbcType="LONGVARCHAR" />
		<result column="SummaryCorePhrases"
			property="summarycorephrases" jdbcType="LONGVARCHAR" />
		<result column="SummaryExcludePhrases"
			property="summaryexcludephrases" jdbcType="LONGVARCHAR" />
		<result column="TextCorePhrases" property="textcorephrases"
			jdbcType="LONGVARCHAR" />
		<result column="TextExcludePhrases"
			property="textexcludephrases" jdbcType="LONGVARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		Classification_ID, InformationTropism, CreateUser,
		CreateDateTime, UpdateUser,
		UpdateDateTime
	</sql>
	<sql id="Blob_Column_List">
		AllCorePhrases, AllExcludePhrases, TitleCorePhrases,
		TitleExcludePhrases,
		SummaryCorePhrases,
		SummaryExcludePhrases,
		TextCorePhrases, TextExcludePhrases
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from m_classificationfilterwords
		where Classification_ID =
		#{classificationId,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		m_classificationfilterwords
		where Classification_ID =
		#{classificationId,jdbcType=CHAR}
	</delete>

	<insert id="insertSelective"
		parameterType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.ClassificationFilterwordsWithBLOBs">
		insert into m_classificationfilterwords
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="classificationId != null">
				Classification_ID,
			</if>
			<if test="informationtropism != null">
				InformationTropism,
			</if>
			<if test="createuser != null">
				CreateUser,
			</if>
			<if test="createdatetime != null">
				CreateDateTime,
			</if>
			<if test="updateuser != null">
				UpdateUser,
			</if>
			<if test="allcorephrases != null">
				AllCorePhrases,
			</if>
			<if test="allexcludephrases != null">
				AllExcludePhrases,
			</if>
			<if test="titlecorephrases != null">
				TitleCorePhrases,
			</if>
			<if test="titleexcludephrases != null">
				TitleExcludePhrases,
			</if>
			<if test="summarycorephrases != null">
				SummaryCorePhrases,
			</if>
			<if test="summaryexcludephrases != null">
				SummaryExcludePhrases,
			</if>
			<if test="textcorephrases != null">
				TextCorePhrases,
			</if>
			<if test="textexcludephrases != null">
				TextExcludePhrases,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="classificationId != null">
				#{classificationId,jdbcType=CHAR},
			</if>
			<if test="informationtropism != null">
				#{informationtropism,jdbcType=CHAR},
			</if>
			<if test="createuser != null">
				#{createuser,jdbcType=VARCHAR},
			</if>
			<if test="createdatetime != null">
				#{createdatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateuser != null">
				#{updateuser,jdbcType=VARCHAR},
			</if>
			<if test="allcorephrases != null">
				#{allcorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="allexcludephrases != null">
				#{allexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="titlecorephrases != null">
				#{titlecorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="titleexcludephrases != null">
				#{titleexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="summarycorephrases != null">
				#{summarycorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="summaryexcludephrases != null">
				#{summaryexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="textcorephrases != null">
				#{textcorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="textexcludephrases != null">
				#{textexcludephrases,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	
	<select id="selectByFwVo"
		resultType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo"
		parameterType="hashmap">
		select b.Classification_ID classificationId,b.ClassificationName
		classificationName,b.Parent_Classification_ID
		parent_Classification_ID,b.DisplayOrder displayOrder,a.InformationTropism informationtropism,
		a.AllCorePhrases allcorephrases,a.AllExcludePhrases
		allexcludephrases,a.TitleCorePhrases
		titlecorephrases,a.TitleExcludePhrases
		titleexcludephrases,a.SummaryCorePhrases summarycorephrases,
		a.SummaryExcludePhrases summaryexcludephrases,a.TextCorePhrases
		textcorephrases,a.TextExcludePhrases
		textexcludephrases,a.CreateUser
		createuser,a.CreateDateTime createdatetime,
		a.UpdateUser
		updateuser,DATE_FORMAT(a.UpdateDateTime,'%Y/%m/%d %H:%i:%s') updatedatetime FROM
		m_classificationfilterwords a right
		JOIN m_classificationinfo b on
		a.Classification_ID=b.Classification_ID
		<where>
			b.Parent_Classification_ID = "0000000000"
			<if test="classificationName != null and classificationName != ''" >
				and b.Classification_ID in (select left(ClassificationPath,10) from m_classificationinfo c where ClassificationName like CONCAT('%',#{classificationName},'%'))
			</if>
		</where>
		order by displayOrder DESC limit #{l_pre},#{rowSize} 
	</select>

	<select id="queryCount" resultType="java.lang.Integer"
		parameterType="hashmap">
		select count(1) from m_classificationinfo
		<where>
		Parent_Classification_ID = "0000000000"
			<if test="classificationName != null and classificationName != ''" >
				and Classification_ID in (select left(ClassificationPath,10) from m_classificationinfo c where ClassificationName like CONCAT('%',#{classificationName},'%'))
			</if>
		</where>
	</select>
	<select id="queryOne"
		resultType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo"
		parameterType="String">
		select b.Classification_ID
		classificationId,b.ClassificationName
		classificationName,b.Parent_Classification_ID
		parent_Classification_ID,b.DisplayOrder displayOrder,a.InformationTropism informationtropism,
		(SELECT ClassificationName FROM m_classificationinfo 
		 where Classification_ID=b.parent_Classification_ID) parent_name,
		a.AllCorePhrases allcorephrases,a.AllExcludePhrases
		allexcludephrases,a.TitleCorePhrases
		titlecorephrases,a.TitleExcludePhrases
		titleexcludephrases,a.SummaryCorePhrases summarycorephrases,
		a.SummaryExcludePhrases summaryexcludephrases,a.TextCorePhrases
		textcorephrases,a.TextExcludePhrases textexcludephrases,a.CreateUser
		createuser,a.CreateDateTime createdatetime, a.UpdateUser
		updateuser,DATE_FORMAT(a.UpdateDateTime,'%Y/%m/%d %H:%i:%s') updatedatetime  FROM m_classificationinfo b
		LEFT JOIN m_classificationfilterwords a on
		a.Classification_ID=b.Classification_ID WHERE b.Classification_ID
		=#{value}

	</select>

	<update id="updateFwVo"
		parameterType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo">
		update m_classificationfilterwords
		<set>
			<if test="informationtropism != null">
				InformationTropism = #{informationtropism,jdbcType=CHAR},
			</if>
			<if test="updateuser != null">
				UpdateUser = #{updateuser,jdbcType=VARCHAR},
			</if>
			<if test="allcorephrases != null">
				AllCorePhrases = #{allcorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="allexcludephrases != null">
				AllExcludePhrases =
				#{allexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="titlecorephrases != null">
				TitleCorePhrases =
				#{titlecorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="titleexcludephrases != null">
				TitleExcludePhrases =
				#{titleexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="summarycorephrases != null">
				SummaryCorePhrases =
				#{summarycorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="summaryexcludephrases != null">
				SummaryExcludePhrases =
				#{summaryexcludephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="textcorephrases != null">
				TextCorePhrases =
				#{textcorephrases,jdbcType=LONGVARCHAR},
			</if>
			<if test="textexcludephrases != null">
				TextExcludePhrases =
				#{textexcludephrases,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where Classification_ID = #{classificationId,jdbcType=CHAR}
	</update>

	<select id="queryParents" resultType="String">
		select Parent_Classification_ID from m_classificationinfo
		<where>
		Parent_Classification_ID != "0000000000"
		</where>
		group by Parent_Classification_ID
	</select>
	
	<select id="queryChild" parameterType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo" resultType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo">
		select b.Classification_ID classificationId,b.ClassificationName
		classificationName,b.Parent_Classification_ID
		parent_Classification_ID,b.DisplayOrder displayOrder,a.InformationTropism informationtropism,
		a.AllCorePhrases allcorephrases,a.AllExcludePhrases
		allexcludephrases,a.TitleCorePhrases
		titlecorephrases,a.TitleExcludePhrases
		titleexcludephrases,a.SummaryCorePhrases summarycorephrases,
		a.SummaryExcludePhrases summaryexcludephrases,a.TextCorePhrases
		textcorephrases,a.TextExcludePhrases
		textexcludephrases,a.CreateUser
		createuser,a.CreateDateTime createdatetime,
		a.UpdateUser
		updateuser,DATE_FORMAT(a.UpdateDateTime,'%Y/%m/%d %H:%i:%s') updatedatetime, 
		case when (select count(1) from m_classificationinfo c where b.Classification_ID=c.Parent_Classification_ID )>0 then true else false end isParent
		FROM
		m_classificationfilterwords a right
		JOIN m_classificationinfo b on
		a.Classification_ID=b.Classification_ID
		<where>
				b.Parent_Classification_ID = #{parent_Classification_ID}
			<if test="classificationName != null and classificationName != ''">
				and b.ClassificationName like CONCAT('%',#{classificationName},'%')
			</if>
		</where>
		order by displayOrder DESC
	</select>
	<select id="queryById" parameterType="String" resultType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo">
		select b.Classification_ID classificationId,b.ClassificationName
		classificationName,b.Parent_Classification_ID
		parent_Classification_ID,b.DisplayOrder displayOrder,
		(select GROUP_CONCAT(ClassificationName SEPARATOR '》')  
				FROM m_classificationinfo WHERE  LOCATE(Classification_ID,
				(select DISTINCT getParentList_classificationinfo(b.Classification_ID) 
				from m_classificationinfo))>0) allParent_name,
		a.InformationTropism informationtropism,
		a.AllCorePhrases allcorephrases,a.AllExcludePhrases
		allexcludephrases,a.TitleCorePhrases
		titlecorephrases,a.TitleExcludePhrases
		titleexcludephrases,a.SummaryCorePhrases summarycorephrases,
		a.SummaryExcludePhrases summaryexcludephrases,a.TextCorePhrases
		textcorephrases,a.TextExcludePhrases
		textexcludephrases,a.CreateUser
		createuser,a.CreateDateTime createdatetime,
		a.UpdateUser
		updateuser,DATE_FORMAT(a.UpdateDateTime,'%Y/%m/%d %H:%i:%s') updatedatetime FROM
		m_classificationfilterwords a right
		JOIN m_classificationinfo b on
		a.Classification_ID=b.Classification_ID
		<where>
			
			b.Classification_ID in (${value})

		</where>
		order by displayOrder DESC
	</select>
		<select id="queryByName" parameterType="String"
		resultType="com.ichangyun.InforAnalyaizer.model.classificationfilterwords.FilterWordsVo">
		select b.Classification_ID classificationId,b.ClassificationName
		classificationName,b.Parent_Classification_ID
		parent_Classification_ID,b.DisplayOrder displayOrder,
		(select
		GROUP_CONCAT(ClassificationName SEPARATOR '》')
		FROM
		m_classificationinfo WHERE LOCATE(Classification_ID,
		(select DISTINCT
		getParentList_classificationinfo(b.Classification_ID)
		from
		m_classificationinfo))>0) allParent_name,
		a.InformationTropism
		informationtropism,
		a.AllCorePhrases allcorephrases,a.AllExcludePhrases
		allexcludephrases,a.TitleCorePhrases
		titlecorephrases,a.TitleExcludePhrases
		titleexcludephrases,a.SummaryCorePhrases summarycorephrases,
		a.SummaryExcludePhrases summaryexcludephrases,a.TextCorePhrases
		textcorephrases,a.TextExcludePhrases
		textexcludephrases,a.CreateUser
		createuser,a.CreateDateTime createdatetime,
		a.UpdateUser
		updateuser,DATE_FORMAT(a.UpdateDateTime,'%Y/%m/%d %H:%i:%s')
		updatedatetime FROM
		m_classificationfilterwords a right
		JOIN
		m_classificationinfo b on
		a.Classification_ID=b.Classification_ID
		<where>
			b.ClassificationName in (${value})
		</where>
		order by displayOrder DESC
	</select>

	<insert id="insertMany" >
		insert into m_classificationfilterwords
		(Classification_ID,
		InformationTropism,
		AllCorePhrases,
		AllExcludePhrases,
		TitleCorePhrases,
		TitleExcludePhrases,
		SummaryCorePhrases,
		SummaryExcludePhrases,
		TextCorePhrases,
		TextExcludePhrases,
		CreateUser,
		CreateDateTime,
		UpdateUser,
		UpdateDateTime)
		VALUES
		<foreach collection="list" item="vo" separator=",">
			(#{vo.classificationId},#{vo.informationtropism},
			#{vo.allcorephrases},#{vo.allexcludephrases},
			#{vo.titlecorephrases},#{vo.titleexcludephrases},
			#{vo.summarycorephrases},#{vo.summaryexcludephrases},
			#{vo.textcorephrases},#{vo.textexcludephrases},
			#{userid},
			NOW(),
			#{userid},
			NOW()
			)
		</foreach>
	</insert>
	<update id="updateMany" >
		update m_classificationfilterwords
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="InformationTropism =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.informationtropism}
				</foreach>
			</trim>
			<trim prefix="AllCorePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then #{vo.allcorephrases}
				</foreach>
			</trim>
			<trim prefix="AllExcludePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.allexcludephrases}
				</foreach>
			</trim>
			<trim prefix="TitleCorePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.titlecorephrases}
				</foreach>
			</trim>
			<trim prefix="TitleExcludePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.titleexcludephrases}
				</foreach>
			</trim>
			<trim prefix="SummaryCorePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.summarycorephrases}
				</foreach>
			</trim>
			<trim prefix="SummaryExcludePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.summaryexcludephrases}
				</foreach>
			</trim>
			<trim prefix="TextCorePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.textcorephrases}
				</foreach>
			</trim>
			<trim prefix="TextExcludePhrases =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{vo.textexcludephrases}
				</foreach>
			</trim>
			<trim prefix="UpdateUser =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					#{userid}
				</foreach>
			</trim>
					<trim prefix="UpdateDateTime =case" suffix="end,">
				<foreach collection="list" item="vo">
					when
					Classification_ID=#{vo.classificationId} then
					NOW()
				</foreach>
			</trim>
		</trim>
		where
		<foreach collection="list" separator="or" item="vo"
			index="index">
			Classification_ID=#{vo.classificationId}
		</foreach>
	</update>
	
	<select id="getAllClassificationNames" resultType="com.ichangyun.InforAnalyaizer.model.classification.ClassificationInfoBean">
	   select ClassificationName,
			(select count(1) from  m_classificationinfo where Parent_Classification_ID=a.Classification_ID) children_lg
			 from m_classificationinfo a
	</select>
	
</mapper>