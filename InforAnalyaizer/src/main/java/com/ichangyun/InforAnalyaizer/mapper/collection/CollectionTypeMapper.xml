<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ichangyun.InforAnalyaizer.mapper.collection.CollectionTypeMapper" >
  <resultMap id="BaseResultMap" type="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeVo" >
    <id column="User_ID" property="userId" jdbcType="CHAR" />
    <id column="CollectionType_ID" property="collectiontypeId" jdbcType="CHAR" />
    <result column="CollectionTypeName" property="collectiontypename" jdbcType="VARCHAR" />
    <result column="Parent_CollectionType_ID" property="parentCollectiontypeId" jdbcType="CHAR" />
    <result column="DisplayOrder" property="displayorder" jdbcType="INTEGER" />
    <result column="ValidFlag" property="validflag" jdbcType="CHAR" />
    <result column="CreateUser" property="createuser" jdbcType="VARCHAR" />
    <result column="CreateDateTime" property="createdatetime" jdbcType="TIMESTAMP" />
    <result column="UpdateUser" property="updateuser" jdbcType="VARCHAR" />
    <result column="UpdateDateTime" property="updatedatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    a.User_ID userId, a.CollectionType_ID collectiontypeId, a.CollectionTypeName collectiontypename,a.Parent_CollectionType_ID parentCollectiontypeId, a.DisplayOrder displayorder, 
    a.ValidFlag validflag, a.CreateUser createuser, a.CreateDateTime createdatetime, a.UpdateUser updateuser, DATE_FORMAT(a.UpdateDateTime,'%Y-%m-%d %H:%i:%s') updatedatetime,a.CollectionPath collectionpath,
        a.CollectionStratum collectionstratum,(SELECT COUNT(1) FROM m_collectiontype where Parent_CollectionType_ID=a.CollectionType_ID) childrenNum
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeKey" >
      delete from m_collectiontype  where User_ID = #{userId} and locate(
   		CollectionType_ID,
  		(select DISTINCT getChildList_collectiontype(#{collectiontypeId}) from m_collectiontype)
		)>0 
  </delete>

  <insert id="insertSelective" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    insert into m_collectiontype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        User_ID,
      </if>
      <if test="collectiontypeId != null" >
        CollectionType_ID,
      </if>
      <if test="collectiontypename != null" >
        CollectionTypeName,
      </if>
      <if test="parentCollectiontypeId != null" >
        Parent_CollectionType_ID,
      </if>
      <if test="displayorder != null" >
        DisplayOrder,
      </if>
      <if test="validflag != null" >
        ValidFlag,
      </if>
      <if test="createuser != null" >
        CreateUser,
      </if>
        CreateDateTime,
        UpdateDateTime,
      <if test="updateuser != null" >
        UpdateUser,
      </if>
	<if test="collectionpath != null" >
        CollectionPath,
      </if>
      	<if test="collectionstratum != null" >
        CollectionStratum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="collectiontypeId != null" >
        #{collectiontypeId,jdbcType=CHAR},
      </if>
      <if test="collectiontypename != null" >
        #{collectiontypename,jdbcType=VARCHAR},
      </if>
      <if test="parentCollectiontypeId != null" >
        #{parentCollectiontypeId,jdbcType=CHAR},
      </if>
      <if test="displayorder != null" >
        #{displayorder,jdbcType=INTEGER},
      </if>
      <if test="validflag != null" >
        #{validflag,jdbcType=CHAR},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
        now(),
        now(),
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
 <if test="collectionpath != null" >
        #{collectionpath,jdbcType=VARCHAR},
      </if> 
      <if test="collectionstratum != null" >
        #{collectionstratum},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    update m_collectiontype
    <set >
      <if test="collectiontypename != null" >
        CollectionTypeName = #{collectiontypename,jdbcType=VARCHAR},
      </if>
      <if test="parentCollectiontypeId != null" >
        Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR},
      </if>
      <if test="displayorder != null" >
        DisplayOrder = #{displayorder,jdbcType=INTEGER},
      </if>
      <if test="validflag != null" >
        ValidFlag = #{validflag,jdbcType=CHAR},
      </if>
      <if test="updateuser != null" >
        UpdateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
	<if test="collectionpath != null" >
        CollectionPath = #{collectionpath},
      </if>
      	<if test="collectionstratum != null" >
        CollectionStratum = #{collectionstratum},
      </if>
      UpdateDateTime=now()
    </set>
    where User_ID = #{userId,jdbcType=CHAR}
      and CollectionType_ID = #{collectiontypeId,jdbcType=CHAR}
  </update>
  
    <select id="queryAllType" resultType="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeVo" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from m_collectiontype a
    where User_ID = #{value}
    ORDER BY DisplayOrder

  </select>
  
   <select id="queryCount" resultType="integer" parameterType="String" >
    select 
    count(1)
    from m_collectiontype
    where Parent_CollectionType_ID=#{value}

  </select>
  <select id="queryOne" resultType="com.ichangyun.InforAnalyaizer.model.collection.CollectionTypeVo" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from m_collectiontype a
    where CollectionType_ID = #{value}
  </select>
  
    <update id="beforeOrder" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    update m_collectiontype
   	set DisplayOrder = DisplayOrder-1
    where User_ID = #{userId,jdbcType=CHAR}
      and Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR}
      and DisplayOrder <![CDATA[>]]> #{displayorder}
  </update>
  
      <update id="afterOrder" parameterType="com.ichangyun.InforAnalyaizer.model.collection.CollectionType" >
    update m_collectiontype
   	set DisplayOrder = DisplayOrder+1
    where User_ID = #{userId,jdbcType=CHAR}
      and Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR}
      and DisplayOrder <![CDATA[>=]]> #{displayorder}
  </update>
   <update id="changeOrder1" parameterType="hashmap" >
    update m_collectiontype
   	set DisplayOrder = DisplayOrder+1
    where User_ID = #{userId,jdbcType=CHAR}
      and Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR}
      and DisplayOrder <![CDATA[<]]> #{oldDisplayOrder} and DisplayOrder <![CDATA[>=]]> #{displayorder}
  </update>
     <update id="changeOrder2" parameterType="hashmap" >
    update m_collectiontype
   	set DisplayOrder = DisplayOrder-1
    where User_ID = #{userId,jdbcType=CHAR}
      and Parent_CollectionType_ID = #{parentCollectiontypeId,jdbcType=CHAR}
      and DisplayOrder <![CDATA[>]]>  #{oldDisplayOrder} and DisplayOrder <![CDATA[<=]]> #{displayorder}
  </update>
</mapper>